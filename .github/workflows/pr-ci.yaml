name: Pull Request CI
on:
  workflow_dispatch:
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        java-version: [11, 17]
        include:
        - os: windows-latest
          vcvars: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
          openssl_home: C:\Program Files\OpenSSL-Win64
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ matrix.java-version }}
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Maven Version Info
      run: mvn -version
    - if: matrix.os != 'macos-latest'
      name: OpenSSL Library Version Info
      run: openssl version -v
    - if: matrix.os == 'macos-latest'
      name: OpenSSL Library Version Info on MacOS
      run: |
        brew --prefix openssl@3
        export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"
        openssl version
    - if: matrix.os == 'windows-latest'
      name: Install OpenSSL 3 on Windows
      shell: powershell
      run: |
        echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
        vcpkg install openssl:x64-windows-static-md
    - if: matrix.os == 'macos-latest'
      name: Build with Maven (macOS)
      run: |
        export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"
        openssl version
        mvn -B package --file pom.xml -Dorg.wildfly.openssl.path="/opt/homebrew/opt/openssl@3"
    - if: matrix.os == 'ubuntu-latest'
      name: Build with Maven (Ubuntu)
      run: |
        mvn -B package --file pom.xml -Dorg.wildfly.openssl.path=/usr/lib/x86_64-linux-gnu
    - if: matrix.os == 'windows-latest'
      name: Build with Microsoft Visual Studio native tools command prompt and Maven
      env:
        VCVARS: ${{ matrix.vcvars }}
        OPENSSL_HOME: ${{ matrix.openssl_home }}
      shell: cmd
      run: |
        call "%VCVARS%" x64
        set PATH=C:\vcpkg\installed\x64-windows\tools\openssl;%PATH%
        mvn -B package --file pom.xml
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: surefire-reports
        path: '**/surefire-reports/*.txt'

